int Solution::largestRectangleArea(vector<int> &A) {
    vector<int> l(A.size());
    vector<int> r(A.size());
    stack<int> left;
    stack<int> right;
    
    //Find the index of element smaller than current element on left side and store in l[i]
    for(int i=0;i<A.size();i++)
    {
        while(!left.empty() && A[left.top()]>=A[i])
        {
            left.pop();
        }
        if(!left.empty())
        l[i]=left.top();
        else
        l[i]=-1;
        
        left.push(i);
    }
    
    //Find the index of element smaller than current element on right side and store in r[i]
    for(int i=A.size()-1;i>=0;i--)
    {
        while(!right.empty() && A[right.top()]>=A[i])
        {
            right.pop();
        }
        if(!right.empty())
        r[i]=right.top();
        else
        r[i]=A.size();
        
        right.push(i);
    }
    
    //Find area for all elements and store the max one
    int area=0;
    for(int i=0;i<A.size();i++)
    {
        area=max(area,((r[i]-l[i]-1)*(A[i])));
    }
    
    return area;
}
