int Solution::solve(vector<int> &A) {
    int m=A.size()+1;
    if(m==2)
        return A[0];
    int range=0;
    for(auto it : A){
        range+=it;
    }
    int n=(range/2)+1;
    bool dp[m][n];

    for(int i=0;i<m;i++){
        dp[i][0]=true;
    }
    for(int i=1;i<n;i++){
        dp[0][i]=false;
    }
    for(int i=1;i<m;i++){
        for(int j=1;j<n;j++){
            if(A[i-1]<=n-1){
                dp[i][j]=(dp[i-1][j] || dp[i-1][j-A[i-1]]);
            }
            else{
                dp[i][j]=dp[i-1][j];
            }
        }
    }
    int ans=INT_MAX;
    for(int i=1;i<n;i++){
        if(dp[m-1][i]){
            ans=min(ans,range-(2*i));
        }
    }
    return ans;
}
