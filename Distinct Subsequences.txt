int Solution::numDistinct(string A, string B) {
    int m=A.size()+1;
    int n=B.size()+1;
    if(m<=n){
        if(A==B){
            return 1;
        }
        else{
            return 0;
        }
    }
    int dp[m][n];
    for(int i=0;i<m;i++){
        dp[i][0]=1;
    }
    for(int j=1;j<n;j++){
        dp[0][j]=0;
    }
    //Include or exclude characters of A to match with B
    for(int i=1;i<m;i++){
        for(int j=1;j<n;j++){
            if(A[i-1]==B[j-1]){
                dp[i][j]=dp[i-1][j]+dp[i-1][j-1]; //Exclude or Include the char
            }
            else{
                dp[i][j]=dp[i-1][j]; //Exclude the char
            }
        }
    }
    return dp[m-1][n-1];
}
